services:
  api:
    container_name: java-spring-boot-21
    image: my-java-spring-boot
    env_file:
      - .env
    ports:
      - 8080:8080
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - backend-network
    volumes:
      - ./:/app
      - ~/.m2:/root/.m2
      - ./src/main/resources/application.properties:/app/resources/application.properties
    restart: unless-stopped
    environment:
      - JAVA_OPTS=-Dspring.devtools.restart.enabled=true -Dspring.devtools.livereload.enabled=true
      - SPRING_PROFILES_ACTIVE=dev
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:17
    container_name: portfolio-db
    environment:
      - POSTGRES_DB=projeto
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=sua_senha
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend-network
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d projeto"]
      interval: 10s
      retries: 5
      timeout: 5s

networks:
  backend-network:
    driver: bridge

volumes:
  postgres_data:
